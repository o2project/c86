= Gitとは

//lead{
//}

== バージョン管理システムとは

バージョン管理の手法としてもっとも簡単なものとして、「ファイルを更新するたびに名前を変更する」というのがあります。例として、下記の通りです。

//emlist{
ほげほげ仕様書.xls
ほげほげ仕様書20140309.xls
ほげほげ仕様書20140310.xls
ほげほげ仕様書20140311.xls
//}

しかし、この管理方法には問題があります。上記の例のように、日付をファイル名の後ろに付ける手法では、ファイルのどの部分を変更したのか分かりにくいものになってしまいます。

また、よくある問題として「どのファイルが最新のファイルか分かりにくい」というものがあります。例として、下記の通りです。

//emlist{
ほげほげ仕様書20140309_fix.xls
ほげほげ仕様書20140309_fix修正版.xls
ほげほげ仕様書20140311.xls
//}

上記の例だと、fix修正版が一見最新の仕様書のように見えますが、20140311という日付がついたファイルも作られており、どちらが最新かはファイルを作った本人にしか分からない状況になってしまいます。

そこでバージョン管理システムを使う事で、いつファイルのどの部分がどのように変更されたか分かるようになります。では、バージョン管理システムについて説明していきます。

== リポジトリとは

バージョン管理を説明する上で、外せないものがリポジトリです。Steins;Gateで言うならば、iOS版の場合で説明すると、セーブデータやどこまでムービーが解禁されたかのフラグの情報が入っていますが、それらが入っているのはiPhone上のROMになります。そのROMがリポジトリと考えればいいと思います。

== 集中バージョン管理システムとは

リモート上にプロジェクトごとに1つのリポジトリがあり、そこにプロジェクトに参加している人たちがファイルで編集した点を反映していく形式です。

代表的なものとして、CVSやSubversionと言われるものがあります。Steins;Gateで言うならば、Quick Save、Quick Loadというシステムがこれに当てはまります。

編集した点を他の人が見られるよう、リモート上のリポジトリに反映する作業(コミットと言います)をする際に直接リモート上のリポジトリにコミットをしなければいけないため、ネット環境がない場所では編集した点を反映する作業すら出来ません。

== 分散バージョン管理システムとは

Steins;Gateで言うならば、セーブ、ロードがこれに当てはまります。
